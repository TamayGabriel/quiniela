{"version":3,"sources":["components/FormJugada.js","components/SidebarResp.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","paper","padding","textAlign","backgroundColor","NumberFormatCustom","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","name","value","decimalScale","thousandSeparator","isNumericString","prefix","Formulario","useState","nombre","apellido","numero","jugada","importe","datos","setDatos","classes","handleInputChange","event","Grid","container","item","xs","Paper","className","noValidate","autoComplete","onSubmit","preventDefault","console","log","TextField","type","id","label","maxlength","InputProps","inputComponent","icon","color","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","background","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","navbarroot","palette","text","primary","titlenav","float","SidebarResp","window","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","map","index","ListItem","button","key","ListItemIcon","ListItemText","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","FormJugada","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d120873.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#f3eae8\",\r\n  },\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      decimalScale=\"0\"\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Formulario = () => {\r\n  const [datos, setDatos] = useState({\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    numero: \"\",\r\n    jugada: \"\",\r\n    importe: \"1320\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleInputChange = (event) => {\r\n    // console.log(event.target.name)\r\n    // console.log(event.target.value)\r\n    setDatos({\r\n      ...datos,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const enviarDatos = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"enviando datos...\" + datos.nombre + \" \" + datos.apellido);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={8}>\r\n          <Paper className={classes.paper}>\r\n            <h1>Formulario</h1>\r\n            <form\r\n              className={classes.root}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={enviarDatos}\r\n            >\r\n              <div>\r\n                <TextField\r\n                  type=\"text\"\r\n                  id=\"standard-required\"\r\n                  label=\"Nombre\"\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                  name=\"nombre\"\r\n                ></TextField>\r\n                <TextField\r\n                  type=\"text\"\r\n                  id=\"standard-required\"\r\n                  label=\"Apellido\"\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                  name=\"apellido\"\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"NÃºmero\"\r\n                  type=\"text\"\r\n                  id=\"standard-required\"\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                  name=\"numero\"\r\n                  maxlength=\"4\"\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Jugada\"\r\n                  type=\"text\"\r\n                  id=\"standard-required\"\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                  name=\"jugada\"\r\n                  maxlength=\"2\"\r\n                ></TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Importe\"\r\n                  value={datos.importe}\r\n                  onChange={handleInputChange}\r\n                  name=\"importe\"\r\n                  id=\"formatted-numberformat-input\"\r\n                  InputProps={{\r\n                    inputComponent: NumberFormatCustom,\r\n                  }}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Enviar\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n            <h1>Apuesta</h1>\r\n            <ul>\r\n              <li>{datos.nombre}</li>\r\n              <li>{datos.apellido}</li>\r\n              <li>{datos.importe}</li>\r\n            </ul>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n//import ListaLibros from \"./ListaLibros\";\r\nimport FormJugada from \"./FormJugada\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: \"white\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      background: \"#224858\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n      color: \"#fff\",\r\n      background: \"#224858\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    color: \"#fff\",\r\n    background: \"#224858\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  navbarroot: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  titlenav: {\r\n    float: \"center\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction SidebarResp(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {[\"Profile\", \"Books\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? (\r\n                <InboxIcon className={classes.icon} />\r\n              ) : (\r\n                <MailIcon className={classes.icon} />\r\n              )}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"Settings\", \"Salir\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? (\r\n                <InboxIcon className={classes.icon} />\r\n              ) : (\r\n                <MailIcon className={classes.icon} />\r\n              )}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div className={classes.titlenav}>\r\n            <h2>Quiniela</h2>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <FormJugada />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebarResp.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default SidebarResp;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport SidebarResp from \"./components/SidebarResp\";\n\nexport default function App() {\n  return <SidebarResp />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}