{"version":3,"sources":["components/BookCard.js","services/libros.js","components/Search.js","components/ListaLibros.js","components/SidebarResp.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","BookCard","name","subtitle","id","imageUrl","classes","Grid","item","xs","sm","md","lg","xl","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","baseUrl","GetLibrosByVolumes","a","fetch","response","json","responseJson","getLibrosBySearch","q","Search","props","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","ListaLibros","isFetch","setIsFetch","libros","setLibros","notFound","setNotFound","useEffect","console","log","totalItems","items","container","spacing","map","libro","volumeInfo","key","theme","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","background","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","navbarroot","paper","textAlign","palette","text","secondary","titlenav","float","SidebarResp","window","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","index","ListItem","button","ListItemIcon","ListItemText","primary","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.73076a79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function BookCard({ name, id, subtitle, imageUrl }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={imageUrl}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {subtitle}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Buy\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Learn More\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","const baseUrl = \"https://www.googleapis.com\";\r\nexport async function GetLibrosByVolumes() {\r\n  const pageIndex = 0;\r\n  const response = await fetch(\r\n    `${baseUrl}/books/v1/volumes?q=harry+potter&pageindex=${pageIndex}&pageSize=10`\r\n  );\r\n  const responseJson = await response.json();\r\n  return responseJson;\r\n}\r\n\r\nexport async function getLibrosBySearch(q) {\r\n  const response = await fetch(`${baseUrl}/books/v1/volumes?q=${q}`);\r\n  const responseJson = await response.json();\r\n  return responseJson;\r\n}\r\n\r\nexport default {\r\n  GetLibrosByVolumes,\r\n  getLibrosBySearch,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n/*\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { search: \"\" };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { handleSearch } = this.props;\r\n    const { search } = this.state;\r\n\r\n    return (\r\n      <div className=\"search-container\">\r\n        <input\r\n          value={this.state.search}\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          className=\"search-input\"\r\n        />\r\n        <button className=\"search-btn\" onClick={() => handleSearch(search)}>\r\n          Search\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  handleSearch: PropTypes.func.isRequired,\r\n};*/\r\n\r\nfunction Search(props) {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    resetInputField();\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <input\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type=\"text\"\r\n        className=\"search-input\"\r\n      />\r\n      <button className=\"search-btn\" onClick={callSearchFunction}>\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport BookCard from \"./BookCard\";\r\nimport { GetLibrosByVolumes, getLibrosBySearch } from \"../services/libros\";\r\nimport Search from \"./Search\";\r\n/*\r\nclass ListaLibros extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      libros: [],\r\n      isFetch: true,\r\n      notFound: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const responseJson = await GetLibrosByVolumes();\r\n    this.setState({ libros: responseJson.items, isFetch: false });\r\n  }\r\n\r\n  search = async (search) => {\r\n    const responseJson = await getLibrosBySearch(search);\r\n    if (responseJson.totalItems > 0) {\r\n      this.setState({\r\n        libros: responseJson.items,\r\n        notFound: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        libros: [],\r\n        notFound: typeof responseJson.items === \"undefined\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { libros, search, isFetch, notFound } = this.state;\r\n    if (this.state.isFetch) {\r\n      return \"Loading...\";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Search search={search} />\r\n        {isFetch && \"loading...\"}\r\n\r\n        {notFound && \"No books found\"}\r\n        <div className=\"book-card-root\">\r\n          <Grid container spacing={3}>\r\n            {this.state.libros.map((libro) => (\r\n              <BookCard\r\n                name={libro.volumeInfo.title}\r\n                subtitle={libro.volumeInfo.subtitle}\r\n                id={libro.id}\r\n                key={libro.id}\r\n                imageUrl=\"https://cdn.pixabay.com/photo/2017/01/13/14/26/book-1977396_960_720.png\"\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListaLibros;*/\r\n\r\nconst ListaLibros = () => {\r\n  const [isFetch, setIsFetch] = useState(true);\r\n  const [libros, setLibros] = useState([]);\r\n  const [notFound, setNotFound] = useState(null);\r\n\r\n  /*async componentDidMount() {\r\n    const responseJson = await GetLibrosByVolumes();\r\n    this.setState({ libros: responseJson.items, isFetch: false });\r\n  }*/\r\n\r\n  useEffect(async () => {\r\n    const responseJson = await GetLibrosByVolumes();\r\n    console.log(responseJson);\r\n    if (responseJson.totalItems > 0) {\r\n      setLibros(responseJson.items);\r\n      setNotFound(false);\r\n      setIsFetch(false);\r\n    }\r\n  }, []);\r\n\r\n  const search = async (search) => {\r\n    setLibros([]);\r\n    setIsFetch(true);\r\n\r\n    const responseJson = await getLibrosBySearch(search);\r\n    if (responseJson.totalItems > 0) {\r\n      setLibros(responseJson.items);\r\n      setNotFound(false);\r\n      setIsFetch(false);\r\n    } else {\r\n      setLibros([]);\r\n      setIsFetch(false);\r\n      setNotFound(typeof responseJson.items === \"undefined\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Search search={search} />\r\n      {isFetch && \"loading...\"}\r\n\r\n      {notFound && \"No books found\"}\r\n      <div className=\"book-card-root\">\r\n        <Grid container spacing={3}>\r\n          {libros.map((libro) => (\r\n            <BookCard\r\n              name={libro.volumeInfo.title}\r\n              subtitle={libro.volumeInfo.subtitle}\r\n              id={libro.id}\r\n              key={libro.id}\r\n              imageUrl=\"https://cdn.pixabay.com/photo/2017/01/13/14/26/book-1977396_960_720.png\"\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListaLibros;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport ListaLibros from \"./ListaLibros\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      background: \"#0f2027\",\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    background: \"#fafafa\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  navbarroot: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  titlenav: {\r\n    float: \"center\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction SidebarResp(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {[\"Profile\", \"Books\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"Settings\", \"Salir\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div className={classes.titlenav}>\r\n            <h2>Timi's Library</h2>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <ListaLibros />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebarResp.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default SidebarResp;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport SidebarResp from \"./components/SidebarResp\";\n\nexport default function App() {\n  return <SidebarResp />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}